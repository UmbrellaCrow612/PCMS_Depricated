@use "@angular/material" as mat;

// Define custom color palettes
$custom-light-primary: mat.m2-define-palette(mat.$m2-indigo-palette, 500);
$custom-light-accent: mat.m2-define-palette(
  mat.$m2-pink-palette,
  A200,
  A100,
  A400
);
$custom-light-warn: mat.m2-define-palette(mat.$m2-red-palette);

$custom-dark-primary: mat.m2-define-palette(mat.$m2-blue-grey-palette, 200);
$custom-dark-accent: mat.m2-define-palette(
  mat.$m2-amber-palette,
  A200,
  A100,
  A400
);
$custom-dark-warn: mat.m2-define-palette(mat.$m2-deep-orange-palette);

// Define the light theme
$light-theme: mat.m2-define-light-theme(
  (
    color: (
      primary: $custom-light-primary,
      accent: $custom-light-accent,
      warn: $custom-light-warn,
    ),
    typography: mat.m2-define-typography-config(),
    density: 0,
  )
);

// Define the dark theme
$dark-theme: mat.m2-define-dark-theme(
  (
    color: (
      primary: $custom-dark-primary,
      accent: $custom-dark-accent,
      warn: $custom-dark-warn,
    ),
    typography: mat.m2-define-typography-config(),
    density: 0,
  )
);

// Include core Material styles
@include mat.core();

// Apply the light theme by default
@include mat.all-component-themes($light-theme);

// Apply the dark theme to the .dark-theme class
.dark-theme {
  @include mat.all-component-colors($dark-theme);
}

// Density classes
$density-scales: (-1, -2, -3, -4, minimum, maximum);
@each $density in $density-scales {
  .density-#{$density} {
    @include mat.all-component-densities($density);
  }
}

// Global styles
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

img,
video,
audio {
  max-width: 100%;
  height: auto;
  display: block;
}

// Add smooth transitions for theme changes
body {
  transition: background-color 0.3s ease, color 0.3s ease;
}

// Optional: Custom styles for better contrast and readability
.dark-theme {
  background-color: #121212;
  color: #ffffff;
}

// Optional: Accessibility improvements
:focus {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}

// Optional: Custom scrollbar for better theme integration
::-webkit-scrollbar {
  width: 12px;
}

::-webkit-scrollbar-track {
  background: #f1f1f1;
}

::-webkit-scrollbar-thumb {
  background: #888;
}

::-webkit-scrollbar-thumb:hover {
  background: #555;
}

.dark-theme {
  ::-webkit-scrollbar-track {
    background: #2c2c2c;
  }

  ::-webkit-scrollbar-thumb {
    background: #666;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: #888;
  }
}

// NGX Charts styles
.ngx-charts {
  text {
    fill: mat.m2-get-color-from-palette($custom-light-primary, 900);
  }

  .tooltip-anchor {
    fill: mat.m2-get-color-from-palette($custom-light-primary, 50);
  }

  .gridline-path {
    stroke: mat.m2-get-color-from-palette($custom-light-primary, 100);
  }

  .refline-path {
    stroke: mat.m2-get-color-from-palette($custom-light-primary, 200);
  }

  .reference-area {
    fill: mat.m2-get-color-from-palette($custom-light-primary, 50);
  }

  .grid-panel {
    &.odd {
      rect {
        fill: rgba(0, 0, 0, 0.05);
      }
    }
  }

  .force-directed-graph {
    .edge {
      stroke: mat.m2-get-color-from-palette($custom-light-primary, 200);
    }
  }

  .number-card {
    p {
      color: mat.m2-get-color-from-palette($custom-light-primary, 900);
    }
  }

  .gauge {
    .background-arc {
      path {
        fill: mat.m2-get-color-from-palette($custom-light-primary, 100);
      }
    }

    .gauge-tick {
      path {
        stroke: mat.m2-get-color-from-palette($custom-light-primary, 500);
      }

      text {
        fill: mat.m2-get-color-from-palette($custom-light-primary, 500);
      }
    }
  }

  .linear-gauge {
    .background-bar {
      path {
        fill: mat.m2-get-color-from-palette($custom-light-primary, 100);
      }
    }

    .units {
      fill: mat.m2-get-color-from-palette($custom-light-primary, 500);
    }
  }

  .timeline {
    .brush-background {
      fill: rgba(0, 0, 0, 0.05);
    }

    .brush {
      .selection {
        fill: rgba(0, 0, 0, 0.1);
        stroke: mat.m2-get-color-from-palette($custom-light-primary, 500);
      }
    }
  }

  .polar-chart .polar-chart-background {
    fill: mat.m2-get-color-from-palette($custom-light-primary, 50);
  }
}

.chart-legend {
  .legend-labels {
    background: rgba(0, 0, 0, 0.05) !important;
  }

  .legend-item {
    &:hover {
      color: mat.m2-get-color-from-palette($custom-light-primary, 900);
    }
  }

  .legend-label {
    &:hover {
      color: mat.m2-get-color-from-palette(
        $custom-light-primary,
        900
      ) !important;
    }

    .active {
      .legend-label-text {
        color: mat.m2-get-color-from-palette(
          $custom-light-primary,
          900
        ) !important;
      }
    }
  }

  .scale-legend-label {
    color: mat.m2-get-color-from-palette($custom-light-primary, 500);
  }
}

.advanced-pie-legend {
  color: mat.m2-get-color-from-palette($custom-light-primary, 500);

  .legend-item {
    &:hover {
      color: mat.m2-get-color-from-palette(
        $custom-light-primary,
        900
      ) !important;
    }
  }
}

.number-card .number-card-label {
  font-size: 0.8em;
  color: mat.m2-get-color-from-palette($custom-light-primary, 500);
}

// Dark theme overrides for NGX Charts
.dark-theme {
  .ngx-charts {
    text {
      fill: mat.m2-get-color-from-palette($custom-dark-primary, 100);
    }

    .tooltip-anchor {
      fill: mat.m2-get-color-from-palette($custom-dark-primary, 900);
    }

    .gridline-path {
      stroke: mat.m2-get-color-from-palette($custom-dark-primary, 700);
    }

    .refline-path {
      stroke: mat.m2-get-color-from-palette($custom-dark-primary, 500);
    }

    .reference-area {
      fill: mat.m2-get-color-from-palette($custom-dark-primary, 900);
    }

    .grid-panel {
      &.odd {
        rect {
          fill: rgba(255, 255, 255, 0.05);
        }
      }
    }

    .force-directed-graph {
      .edge {
        stroke: mat.m2-get-color-from-palette($custom-dark-primary, 500);
      }
    }

    .number-card {
      p {
        color: mat.m2-get-color-from-palette($custom-dark-primary, 100);
      }
    }

    .gauge {
      .background-arc {
        path {
          fill: mat.m2-get-color-from-palette($custom-dark-primary, 700);
        }
      }

      .gauge-tick {
        path {
          stroke: mat.m2-get-color-from-palette($custom-dark-primary, 300);
        }

        text {
          fill: mat.m2-get-color-from-palette($custom-dark-primary, 300);
        }
      }
    }

    .linear-gauge {
      .background-bar {
        path {
          fill: mat.m2-get-color-from-palette($custom-dark-primary, 700);
        }
      }

      .units {
        fill: mat.m2-get-color-from-palette($custom-dark-primary, 300);
      }
    }

    .timeline {
      .brush-background {
        fill: rgba(255, 255, 255, 0.05);
      }

      .brush {
        .selection {
          fill: rgba(255, 255, 255, 0.1);
          stroke: mat.m2-get-color-from-palette($custom-dark-primary, 300);
        }
      }
    }

    .polar-chart .polar-chart-background {
      fill: mat.m2-get-color-from-palette($custom-dark-primary, 900);
    }
  }

  .chart-legend {
    .legend-labels {
      background: rgba(255, 255, 255, 0.05) !important;
    }

    .legend-item {
      &:hover {
        color: mat.m2-get-color-from-palette($custom-dark-primary, 100);
      }
    }

    .legend-label {
      &:hover {
        color: mat.m2-get-color-from-palette(
          $custom-dark-primary,
          100
        ) !important;
      }

      .active {
        .legend-label-text {
          color: mat.m2-get-color-from-palette(
            $custom-dark-primary,
            100
          ) !important;
        }
      }
    }

    .scale-legend-label {
      color: mat.m2-get-color-from-palette($custom-dark-primary, 300);
    }
  }

  .advanced-pie-legend {
    color: mat.m2-get-color-from-palette($custom-dark-primary, 300);

    .legend-item {
      &:hover {
        color: mat.m2-get-color-from-palette(
          $custom-dark-primary,
          100
        ) !important;
      }
    }
  }

  .number-card .number-card-label {
    color: mat.m2-get-color-from-palette($custom-dark-primary, 300);
  }
}
